[Model]
; Upper Image Cropping bound
upper_cropping_bound = 65
; Lower Image Cropping bound
lower_cropping_bound = 25
; Dropout
dropout = 0.6

[Preprocess]
; Add/Subtract images from translated side cameras by the correction_factor
correction_factor = 0.3
; Flip images left/right that have a higher steering angle than the flip_threshold
flip_threshold = 0.2
; Straight line images are the most abbundant and hinder proper training
; Therefore take only a fraction of them (e.g. 0.6 == 60%)
line_image_probality = 0.3
; Randomly perturb image brightness and/or noise given this probability
perturbation_probability = 0.3
; Noise perturbation level (+- pixel perturbation)
noise_thresh = 30
; Global image brighness perturbation (0.5 == up to 50% +- image brightness)
brightness = 0.3

[Train]
; Split data in to a train/valid ratio of 0.8/0.2
split = 0.2
; Modify the batch size to fit your GPU. This setup works on a 2GB device
batch_size = 24
epochs = 1
data_path = data
overlap_factor = 1.2
max_queue_size = 2

[Run]
; Keep in mind the default data_path (defined above) and this is where your runs
; shall live!
; Define below your runs wich will be executed consecutively (names are irrelevant)

; Here in the first run, only the dataset from the second track (mountain track,
; driven carefully for two laps, one for each lane) will be used to pre-train the model
pre_train_on_track2 = tr2_960x720
; The pretrained model will then be fine-tuned for both tracks by mixing the
; mountain track  and two runs on the dirt road, driven in opposite directions.
; train_on_pre_trained_track_2 = tr2_960x720 tr_960x720 tr_960x720_right
